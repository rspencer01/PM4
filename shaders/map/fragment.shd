#version 140
in vec4 pos;
out vec4 fragColor;
uniform vec3 CameraPosition;
uniform vec3 CameraDirection;

uniform sampler2D heightmap;

uniform float ambientLight;

void main()
{

  float al = 0.75;
  if (abs(pos.x)-0.95>0 || abs(pos.y)-0.95>0)
  {
    al = 0.75*min(
        1-(abs(pos.x)-0.95)/0.05,
        1-(abs(pos.y)-0.95)/0.05
      );
  }

  if (abs(pos.x) < 0.005 || abs(pos.y) < 0.005)
  {
    fragColor = vec4(0.5,0.7,0.5,al);
    return;
  }

  if (abs(length(pos.xy*3) - round(length(pos.xy*3))) < 0.02)
  {
    fragColor = vec4(0.5,1-length(pos.xy)/1.5,0,al);
    return;
  }

  if (dot(normalize(pos.xy),normalize(CameraDirection.xz)) > 0.99 && length(pos.xy)<0.33)
  {
    fragColor = vec4(0.5,1,0.5,al);
    return;
  }


  vec2 ps = CameraPosition.xz / 8000;
  float height = texture2D(heightmap,ps + pos.xy/8 + vec2(0.5)).a/200;
  int marked = 0;
  
  float offheight = texture2D(heightmap,ps + pos.xy/8 + vec2(0.5)+vec2(0.001)).a/200;
  if (height*3 < round(height*3) && offheight*3 >= round(offheight*3)) marked = 1;

        offheight = texture2D(heightmap,ps + pos.xy/8 + vec2(0.5)+vec2(-0.001)).a/200;
  if (height*3 < round(height*3) && offheight*3 >= round(offheight*3)) marked = 1;

        offheight = texture2D(heightmap,ps + pos.xy/8 + vec2(0.5)+vec2(0.001,-0.001)).a/200;
  if (height*3 < round(height*3) && offheight*3 >= round(offheight*3)) marked = 1;

        offheight = texture2D(heightmap,ps + pos.xy/8 + vec2(0.5)+vec2(-0.001,0.001)).a/200;
  if (height*3 < round(height*3) && offheight*3 >= round(offheight*3)) marked = 1;

  if (marked>0)
  {
    fragColor = vec4(0.5,0.5,0.7,al);
    return;
  }
  fragColor = vec4(height/5,0,0,al);
}

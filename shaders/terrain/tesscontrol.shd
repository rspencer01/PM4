#version 410 core

// define the number of CPs in the output patch
layout (vertices = 3) out;

// The user camera
uniform vec3 userCameraPosition;
uniform vec3 userCameraDirection;
uniform vec3 CameraDirection;
uniform sampler2D heightmap;

uniform int worldSize;

in vec3 pos[];
out vec3 evaluationpoint_wor[];

int detailLevel(vec3 position)
{
  vec3 dir = position - userCameraPosition;
  float dist = length(dir.xz);
  if (dist < 400)
    return 100;
  if (dist > 40000)
    return 0;
  if (dist > 4000)
  {
    float ht = texture(heightmap,position.xz/worldSize+vec2(0.5)).a;
    return 1 +
    int(ht/1500);
  }
  if (dist > 1000)
    if (dot(normalize(dir.xyz),normalize(CameraDirection.xyz)) < 0.0)
      return 0;
  if (dist < 1000)
    return 1 +
      int(exp(-(dist-300)/700)*8);
  if (dist < 4000)
    return 2;
  return 1;
}

void main()
{
  // Set the control points of the output patch
  evaluationpoint_wor[gl_InvocationID] = pos[gl_InvocationID];

  gl_TessLevelInner[0] = detailLevel((pos[0] + pos[1] + pos[2]) / 3.0);
  gl_TessLevelOuter[0] = detailLevel((pos[1] + pos[2]) / 2.0);
  gl_TessLevelOuter[1] = detailLevel((pos[0] + pos[2]) / 2.0);
  gl_TessLevelOuter[2] = detailLevel((pos[1] + pos[0]) / 2.0);
}

#version 330
layout(location=0) out vec4 fragColor;
layout(location=1) out vec4 fragNorm;
layout(location=2) out vec4 fragPos;

in VertexData
{
  vec4 position;
  vec4 normal;
  vec4 color;
  vec3 shadowPos1;
  vec3 shadowPos2;
  vec3 shadowPos3;
  vec2 uv;
  mat2 normMat;
} VertexOut;

uniform vec3 sunDirection;
uniform vec3 CameraPosition;
uniform vec3 userCameraPosition;
uniform sampler2D shadowTexture1;
uniform sampler2D shadowTexture2;
uniform sampler2D shadowTexture3;
uniform sampler2D  colormap;
uniform sampler2D  bumpmap;

void main()
{
  if (abs(VertexOut.position.x - 100*(userCameraPosition.x/100)) < 100 && abs(VertexOut.position.z - 100*(userCameraPosition.z/100)) < 100 ) discard;
  float dist = length(VertexOut.position.xyz - userCameraPosition);
  vec4 textureColor = textureLod(colormap,vec2(VertexOut.uv.x,VertexOut.uv.y),min(dist/800,4));
  vec3 normal = textureLod(bumpmap,vec2(VertexOut.uv.x,1-VertexOut.uv.y),min(dist/800,4)).xyz;
  normal.xz = VertexOut.normMat * normal.xz;
  if (textureColor.a < 0.4) discard;
  fragColor = textureColor;
  fragNorm = vec4(normal,1);
  fragPos = VertexOut.position;
}

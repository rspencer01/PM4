#version 140
uniform vec3 CameraPosition;
uniform vec3 sunDirection;
in vec3 shadowPos1;
in vec3 shadowPos2;
in vec3 shadowPos3;
in vec2 te_uv;

in vec3 pos;
float specu = 200.0;

uniform sampler2D bumpmap;
uniform sampler2D shadowTexture1;
uniform sampler2D shadowTexture2;
uniform sampler2D shadowTexture3;

float light(vec3 norm)
{
  float diff = 0.2 * dot(sunDirection,norm);
  float ambi = 0.5;
  float shadow = 0;
  if ((shadowPos1.x<1.0) && (shadowPos1.x>0)&&(shadowPos1.y<1.0) && (shadowPos1.y>0))
  {
     if (shadowPos1.z-texture(shadowTexture1,shadowPos1.xy).z > 0.0001)
          shadow =1;
  }
  else
  {
    if ((shadowPos2.x<1.0) && (shadowPos2.x>0)&&(shadowPos2.y<1.0) && (shadowPos2.y>0))
    {
       if (shadowPos2.z-texture(shadowTexture2,shadowPos2.xy).z > 0.0001)
            shadow =1;
    }
    else
    {
      if ((shadowPos3.x<1.0) && (shadowPos3.x>0)&&(shadowPos3.y<1.0) && (shadowPos3.y>0))
         if (shadowPos3.z-texture(shadowTexture3,shadowPos3.xy).z > 0.0001)
              shadow =1;
    }
  }
  return ambi*(1-0.5*shadow) + max(0,diff);
}


void main()
{
  vec3 norm = normalize(texture(bumpmap,te_uv).xyz);
  float l = light(norm);
  vec3 col = vec3(0.55,0.5,0.4);
  //if (texture(bumpmap,te_uv).a<0.001)
  //  discard;
  gl_FragColor = vec4(col * l,1);
}

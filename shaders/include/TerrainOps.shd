uniform sampler2D heightmap;

float getCurvature(sampler2D tex, vec2 ps)
{
  float c = texture(tex,ps/60000).a;
  float d = texture(tex,(ps+vec2(10,0))/60000).a+
            texture(tex,(ps+vec2(0,10))/60000).a+
            texture(tex,(ps+vec2(-10,0))/60000).a+
            texture(tex,(ps+vec2(0,-10))/60000).a;
  d/=4;
  return abs(c-d);
}

float getFineAmount(vec2 ps)
{
  float theta = acos(normalize(texture(heightmap,ps/60000).xyz).y);
  if (theta<0.4)
    return 30;
  return 30+(theta-0.4)*100 + 10*(theta-0.4)*getCurvature(heightmap, ps);
}

vec4 getFineValue(vec2 ps)
{
  vec4 ans1 = texture(noise, ps/1000);
  ans1.xz /= 1000;
  ans1.xzw *= getFineAmount(ps);
  ans1.xyz = normalize(ans1.xyz);
  return ans1;
}

vec3 getDisplacement(vec2 ps)
{
  vec3 displacement = vec3(0,1,0) * texture(heightmap, ps/60000).a;
  displacement.y += getFineValue(ps).a;
  return displacement;
}

vec3 getNormal(vec2 ps)
{
  vec3 n = normalize(texture(heightmap, ps/60000).zyx);
  vec3 t = cross(vec3(1,0,0),n);
  vec3 b = cross(t,n);
  mat3 mt = mat3(t, n, b);
  return normalize(mt * getFineValue(ps).xyz);
}
